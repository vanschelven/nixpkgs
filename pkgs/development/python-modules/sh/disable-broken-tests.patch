From 264f2f6a04d25156bba43524a6b172d2e99c53f4 Mon Sep 17 00:00:00 2001
From: Ben Wolsieffer <benwolsieffer@gmail.com>
Date: Fri, 21 Dec 2018 17:39:45 -0500
Subject: [PATCH] Disable tests that fail on OSX.

Some of the failures are due to the use of GNU ls.
On NixOS, one test failed because of an extra LC_CTYPE=C.UTF-8 'cruft variable'
---
 test.py | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/test.py b/test.py
index 68ef40c..2f53360 100644
--- a/test.py
+++ b/test.py
@@ -352,6 +352,7 @@
         self.assertEqual(sed(_in="one test three", e="s/test/two/").strip(),
                 "one two three")
 
+    @not_osx
     def test_ok_code(self):
         from sh import ls, ErrorReturnCode_1, ErrorReturnCode_2
 
@@ -498,6 +499,7 @@ while True:
         self.assertEqual(out, match)
 
 
+    @not_osx
     def test_environment(self):
         """ tests that environments variables that we pass into sh commands
         exist in the environment, and on the sh module """
@@ -515,17 +517,20 @@
             "VERSIONER_PYTHON_VERSION",
         ]
 
+        nix_cruft = ["LC_CTYPE"]
+        cruft = osx_cruft + nix_cruft
+
         # first we test that the environment exists in our child process as
         # we've set it
         py = create_tmp_test("""
 import os
 
-osx_cruft = %s
-for key in osx_cruft:
+cruft = %s
+for key in cruft:
     try: del os.environ[key]
     except: pass
 print(os.environ["HERP"] + " " + str(len(os.environ)))
-""" % osx_cruft)
+""" % cruft)
         out = python(py.name, _env=env).strip()
         self.assertEqual(out, "DERP 1")
 
@@ -533,12 +538,12 @@
 import os, sys
 sys.path.insert(0, os.getcwd())
 import sh
-osx_cruft = %s
-for key in osx_cruft:
+cruft = %s
+for key in cruft:
     try: del os.environ[key]
     except: pass
 print(sh.HERP + " " + str(len(os.environ)))
-""" % osx_cruft)
+""" % cruft)
         out = python(py.name, _env=env, _cwd=THIS_DIR).strip()
         self.assertEqual(out, "DERP 1")
 
@@ -861,6 +866,7 @@
         self.assertTrue(now - start > sleep_time)
 
 
+    @not_osx
     def test_background_exception(self):
         from sh import ls, ErrorReturnCode_1, ErrorReturnCode_2
         p = ls("/ofawjeofj", _bg=True) # should not raise
@@ -2036,6 +2042,7 @@ else:
         self.assertEqual(p, "test")
 
 
+    @not_osx
     def test_signal_exception(self):
         from sh import SignalException_15
 
